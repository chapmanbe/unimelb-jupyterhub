---
# This script provisions machines and deploys JupyterHub on them, as well as
# setting up a network file system mirrored across all instances.
#
# Note that this script does a few things which are simple rather than using
#   statuses to get definitive results. This was done in the interest of making
#   better use of time allotted, mainly creating and checking files instead of
#   running commands to check statuses. Most of these can probably be simply
#   replaced without an immense amount of hassle, but the script should set up
#   the system anyway, so there shouldn't be any harm done by leaving it as it
#   is.
#
#
# Need this to work out IP addresses of all nodes to run on, any other
# method will suffice.
#
- name: Check OpenStack image facts for personal project.
  hosts: localhost
  vars_files:
    - variables/vars.yml
  tasks:

    - name: Get instance facts
      os_server_facts:
        api_timeout: 50 # Seconds(?)
        auth:
          auth_url: "{{ cloud_auth_url }}"
          username: "{{ cloud_username }}"
          password: "{{ cloud_password }}"
          project_name: "{{ cloud_project_name }}"
        server: "{{ instance_name_prefix }}*"
        wait: yes

    # Uses above facts to set up list of all nodes to run on.
    - name: Add compute hosts to in-memory inventory
      add_host:
        groups: jupyterhub_nodes
        name: "{{ item['accessIPv4'] }}"
      loop: "{{ openstack_servers }}"

    # This node is arbitrary, but can handle anything where a single origin node
    # is required to manage system setup correctly.
    # NOTE: This _is_ idempotent in the presence of scaling. Nodes are retrieved
    # in descending order of creation date, hence the first element will remain
    # the first element _unless_ the first element is removed. If these
    # guarantees are not provided in other cloud APIs, more sophisticated
    # election mechanisms may be required.
    - name: Elect cluster setup manager node
      add_host:
        groups: jupyterhub_head_node
        name: "{{ (openstack_servers | first)['accessIPv4'] }}"

- name: cleanup rook namespace
  hosts: jupyterhub_head_node 
  vars_files: variables/vars.yml
  tasks:
    - name: Delete rook-ceph namespace
      command: kubectl delete namespace rook-ceph

- name: cleanup rook files
  hosts: jupyterhub_nodes
  vars_files: variables/vars.yml
  tasks:
    - name: Remove /mnt/cephdisk/ceph
      become_user: root
      become: yes
      file:
        path: /mnt/cephdisk/ceph
        state: absent

    - name: Remove helm
      become_user: root
      become: yes
      file:
        path: /usr/local/bin/helm
        state: absent
    - name: Remove touched files
      file:
        path: "{{item}}"
        state: absent
      loop:
        - rook_ceph_setup
        - helm_installed
        - rook_helm_installed

    - name: Remove ceph cluster data
      become_user: root
      become: yes
      file:
        path: /mnt/cephdisk/data
        state: absent
